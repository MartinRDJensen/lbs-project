int needham_shroeder(party A, party B){
    auto a = 42;

    // A
    auto NA  = new_nonce();

    // Server
    auto KAB = new_key();

    auto KAS = get_key(A);
    auto KBS = get_key(B);

    auto subbuf = enc(KBS,to_buffer(KAB, A);

    auto buf = enc(KAS,to_buffer(NA, KAB, B, subbuf);

    // A
    auto NAp, KABp, Bp, subbufp = to_tuple(dec(KAS,buf));

    assert(NAp == NA);
    assert(NABp == NAB);
    assert(Bp == B);
    assert(subbufp = subbuf);

    // B
    auto KABpp, App = to_tuple(dec(KBS, subbufp));
    assert(KABpp == KAB);
    assert(App == A);

    auto NB = new_nonce();
    auto NBenc = enc(KABpp, NB);

    // A
    auto NBp = dec(KABp, NBenc);
    assert(NBp == NB);

    auto NB1 = NBp-1;

    auto NB1enc = enc(KAB, NB1);

    // B
    auto NB1p = dec(KAB, NB1enc);
    assert(NB1p == NB1);
}
